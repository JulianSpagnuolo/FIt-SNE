% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fast_tsne.R
\name{fftRtsne}
\alias{fftRtsne}
\title{ffRtsne}
\usage{
fftRtsne(X, dims = 2, perplexity = 30, theta = 0.5,
  check_duplicates = TRUE, max_iter = 1000, fft_not_bh = TRUE,
  ann_not_vptree = TRUE, stop_lying_iter = 250, exaggeration_factor = 12,
  no_momentum_during_exag = FALSE, start_late_exag_iter = -1,
  late_exag_coeff = 1, n_trees = 50, search_k = -1, rand_seed = -1,
  nterms = 3, intervals_per_integer = 1, min_num_intervals = 50,
  data_path = NULL, result_path = NULL, fast_tsne_path = NULL,
  nthreads = NULL)
}
\arguments{
\item{X}{numeric matrix or dataframe containing data to be tsne-fied}

\item{dims}{integer. number of output dimensions to reduce to. Default is 2.}

\item{perplexity}{integer. Default is 30.}

\item{theta}{numeric. Set to 0 for exact.  If non-zero, then will use either Barnes Hut or FIt-SNE based on fft_not_bh. If Barnes Hut is used, then this determines the accuracy of BH approximation. Default is 0.5}

\item{check_duplicates}{logical. Whether to check X for duplicates. Only set to FALSE if you are absolutely sure your data contains no duplicate entries. Default is TRUE.}

\item{max_iter}{integer. Maximum iterations to run tsne over the data.}

\item{fft_not_bh}{logical. Whether to run the Fast Fourier Transform tSNE (TRUE), or if set to FALSE, will use the BH implementation (slower). Default is TRUE.}

\item{ann_not_vptree}{logical. If TRUE will approximate nearest neighbors using [Annoy](https://github.com/spotify/annoy), if FALSE the original BH-tSNE method using vantage-point trees will be used. Use vantage-point trees if fine detail is required (which is also multi-threaded in this implementation, so also quite fast if dimension <100). Default is TRUE}

\item{stop_lying_iter}{integer. Determines the iteration at which early exageration is switch off. Default is 250.}

\item{exaggeration_factor}{numeric. Early exageration coefficient, altering can lead to improved embedding of swissrolls and other synthetic datasets. Default is 12.0}

\item{no_momentum_during_exag}{logical. If FALSE, momentum and other optimizations will be used in the gradient decent phase. If TRUE, standard gradient descent will be used. Useful for testing large exaggeration coefficients. Default is FALSE.}

\item{start_late_exag_iter}{numeric. Iteration at which to start late exageration, if set to -1, late exageration will not be used. Default is -1.0}

\item{late_exag_coeff}{numeric. Increasing this parameter may improve separation of the clusters in the reduced space. Default is 1.0}

\item{n_trees}{integer. Default is 50}

\item{search_k}{numeric. Default is -1.}

\item{rand_seed}{numeric. Set a seed number for reproducibility, if -1 the random seed will be set using the system time. Default is -1.}

\item{nterms}{integer. The number of interpolation points per sub-interval when using FIt-SNE Default is 3.}

\item{intervals_per_integer}{integer. See Details, must be >0. Default is 1}

\item{min_num_intervals}{integer. See Details. Default is 50}

\item{data_path}{character. File path of a data file. If NULL, X will be written to a temp file. Default is NULL}

\item{result_path}{character. File path to write results to, if NULL results will be written to a temp file prior to being read into R. Default is NULL}

\item{fast_tsne_path}{character. File path to the location of the compiled fast_tsne_binary. This version of the forked git repo will compile the fast_tsne binary to the package installation directory, if this param is NULL then the function will default to this location. You can change this behaviour if you have a custom install of the original repo. Default is NULL}

\item{nthreads}{integer. Number of threads used by computeGaussianPerplexity, if NULL, will use detectCores()-1 to determine the number of threads to use.}
}
\value{
Matrix of the reduced tSNE dimensions, ncol = dims, nrow = nrow(X).
}
\details{
ann_not_vptree
 Using "near" neighbors as opposed to strictly "nearest" neighbors is faster, but also has a smoothing effect,
 which can be useful for embedding some datasets (see Linderman et al. (2017)).
 If subtle detail is required (e.g. in identifying small clusters), then use vantage-point trees
 (which is also multithreaded in this implementation).

min_num_intervals & intervals_per_integer

Let:
   maxloc = ceiling(max(max(X)))
   and
   minloc = floor(min(min(X)))
   i.e. the data points are in a minloc^n.dims by maxloc^n.dims interval/square. The number os intervals in each dimension
   is either min_num_intervals or ceiling(maxloc - minloc)/intervals_per_integer whichever is larger.
}
\examples{
# import the iris data set and remove any duplicates 
data(iris)

u.iris <- unique(iris)

# For a standard BH-tsne

bh <- fftRtsne(X=u.iris[,1:4], dims = 2, fft_not_bh = FALSE, max_iter = 1000, rand_seed=42)
u.iris$bh.tsne1 <- bh[,1]
u.iris$bh.tsne2 <- bh[,2]

ggplot(u.iris, aes(x=bh.tsne1, y=bh.tsne2, colour=Species)) +geom_point() +scale_color_colorblind() +theme_bw() +theme(aspect.ratio=1)

# For the fast Fourier transform tSNE

ff <- fftRtsne(X=u.iris[,1:4], dims=2, fft_not_bh=TRUE, max_iter=1000, rand_seed=42)
u.iris$ff.tsne1 <- ff[,1]
u.iris$ff.tsne2 <- ff[,2]

ggplot(u.iris, aes(x=ff.tsne1, y=ff.tsne2, colour=Species)) +geom_point() +scale_color_colorblind() +theme_bw() +theme(aspect.ratio=1)

}
\references{
George C. Linderman, Manas Rachh, Jeremy G. Hoskins, Stefan Steinerberger, Yuval Kluger. (2017). Efficient Algorithms for t-distributed Stochastic Neighborhood Embedding. (2017) arXiv:1712.09005
}
\author{
George Linderman, Cristoph H, Julian Spagnuolo
}
